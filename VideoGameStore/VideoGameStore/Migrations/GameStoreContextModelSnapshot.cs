// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VideoGameStore.DAL;

#nullable disable

namespace VideoGameStore.Migrations
{
    [DbContext(typeof(GameStoreContext))]
    partial class GameStoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VideoGameStore.Models.Game", b =>
                {
                    b.Property<int>("GameID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GameID"));

                    b.Property<int>("GenreID")
                        .HasColumnType("int");

                    b.Property<int>("PLatform")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PublisherID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GameID");

                    b.HasIndex("GenreID");

                    b.HasIndex("PublisherID");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            GameID = 1,
                            GenreID = 3,
                            PLatform = 5,
                            Price = 29.99m,
                            PublisherID = 2,
                            ReleaseDate = new DateTime(2015, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StockQuantity = 10,
                            Title = "The Witcher 3"
                        },
                        new
                        {
                            GameID = 2,
                            GenreID = 2,
                            PLatform = 5,
                            Price = 34.99m,
                            PublisherID = 3,
                            ReleaseDate = new DateTime(2017, 6, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StockQuantity = 10,
                            Title = "Red Dead Redemprion 2"
                        });
                });

            modelBuilder.Entity("VideoGameStore.Models.Genre", b =>
                {
                    b.Property<int>("GenreID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenreID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenreID");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            GenreID = 2,
                            Description = "Roam and Explore, complete quests and interact with npc.",
                            Name = "Adventure"
                        },
                        new
                        {
                            GenreID = 3,
                            Description = "Fantasy world, magic.",
                            Name = "Fantasy"
                        });
                });

            modelBuilder.Entity("VideoGameStore.Models.Publisher", b =>
                {
                    b.Property<int>("PublisherID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PublisherID"));

                    b.Property<string>("Headquarters")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PublisherID1")
                        .HasColumnType("int");

                    b.Property<string>("WebURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PublisherID");

                    b.HasIndex("PublisherID1");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            PublisherID = 3,
                            Headquarters = "Los Angeles",
                            Name = "Rockstar Games",
                            WebURL = "Rockstargames.com"
                        },
                        new
                        {
                            PublisherID = 2,
                            Headquarters = "Poland",
                            Name = "CD Projekt",
                            WebURL = "cdprojekt.com"
                        });
                });

            modelBuilder.Entity("VideoGameStore.Models.Game", b =>
                {
                    b.HasOne("VideoGameStore.Models.Genre", "Genre")
                        .WithMany("Games")
                        .HasForeignKey("GenreID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VideoGameStore.Models.Publisher", "Publisher")
                        .WithMany()
                        .HasForeignKey("PublisherID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("VideoGameStore.Models.Publisher", b =>
                {
                    b.HasOne("VideoGameStore.Models.Publisher", null)
                        .WithMany("Publishers")
                        .HasForeignKey("PublisherID1");
                });

            modelBuilder.Entity("VideoGameStore.Models.Genre", b =>
                {
                    b.Navigation("Games");
                });

            modelBuilder.Entity("VideoGameStore.Models.Publisher", b =>
                {
                    b.Navigation("Publishers");
                });
#pragma warning restore 612, 618
        }
    }
}
