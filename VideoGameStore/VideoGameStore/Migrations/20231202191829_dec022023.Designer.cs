// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VideoGameStore.Models;

#nullable disable

namespace VideoGameStore.Migrations
{
    [DbContext(typeof(GameStoreContext))]
    [Migration("20231202191829_dec022023")]
    partial class dec022023
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("VideoGameStore.Admin.Models.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerID"));

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Zipcode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerID");

                    b.HasIndex("UserID");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerID = 1,
                            Address1 = "123 Main St",
                            Address2 = "Apt 45",
                            City = "Anytown",
                            FirstName = "John",
                            LastName = "Doe",
                            State = "CA",
                            Zipcode = "12345"
                        },
                        new
                        {
                            CustomerID = 2,
                            Address1 = "456 Oak St",
                            Address2 = "",
                            City = "Another City",
                            FirstName = "Alice",
                            LastName = "Smith",
                            State = "NY",
                            Zipcode = "6789"
                        },
                        new
                        {
                            CustomerID = 3,
                            Address1 = "789 Pine St",
                            Address2 = "Suite 101",
                            City = "Yet Another City",
                            FirstName = "Bob",
                            LastName = "Johnson",
                            State = "TX",
                            Zipcode = "54321"
                        });
                });

            modelBuilder.Entity("VideoGameStore.Admin.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeID"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("EmployeeID");

                    b.HasIndex("UserID");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeID = 1,
                            FirstName = "Silent",
                            HireDate = new DateTime(2023, 12, 2, 0, 0, 0, 0, DateTimeKind.Local),
                            LastName = "Bob",
                            Position = "Clerk",
                            Salary = 45000m
                        });
                });

            modelBuilder.Entity("VideoGameStore.Models.Game", b =>
                {
                    b.Property<int>("GameID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GameID"));

                    b.Property<int>("GenreID")
                        .HasColumnType("int");

                    b.Property<int>("Platform")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PublisherID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GameID");

                    b.HasIndex("GenreID");

                    b.HasIndex("PublisherID");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            GameID = 1,
                            GenreID = 3,
                            Platform = 6,
                            Price = 29.99m,
                            PublisherID = 2,
                            ReleaseDate = new DateTime(2015, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StockQuantity = 100,
                            Title = "The Witcher 3: Wild Hunt"
                        },
                        new
                        {
                            GameID = 2,
                            GenreID = 4,
                            Platform = 0,
                            Price = 39.99m,
                            PublisherID = 2,
                            ReleaseDate = new DateTime(2018, 10, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StockQuantity = 75,
                            Title = "Red Dead Redemption 2"
                        },
                        new
                        {
                            GameID = 3,
                            GenreID = 4,
                            Platform = 5,
                            Price = 49.99m,
                            PublisherID = 3,
                            ReleaseDate = new DateTime(2017, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StockQuantity = 60,
                            Title = "The Legend of Zelda: Breath of the Wild"
                        },
                        new
                        {
                            GameID = 4,
                            GenreID = 3,
                            Platform = 3,
                            Price = 34.99m,
                            PublisherID = 1,
                            ReleaseDate = new DateTime(2020, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StockQuantity = 90,
                            Title = "Cyberpunk 2077"
                        },
                        new
                        {
                            GameID = 5,
                            GenreID = 1,
                            Platform = 2,
                            Price = 19.99m,
                            PublisherID = 6,
                            ReleaseDate = new DateTime(2011, 11, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StockQuantity = 120,
                            Title = "Minecraft"
                        },
                        new
                        {
                            GameID = 6,
                            GenreID = 5,
                            Platform = 3,
                            Price = 44.99m,
                            PublisherID = 5,
                            ReleaseDate = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StockQuantity = 80,
                            Title = "FIFA 22"
                        },
                        new
                        {
                            GameID = 7,
                            GenreID = 3,
                            Platform = 1,
                            Price = 37.99m,
                            PublisherID = 4,
                            ReleaseDate = new DateTime(2020, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StockQuantity = 70,
                            Title = "Assassin's Creed Valhalla"
                        },
                        new
                        {
                            GameID = 8,
                            GenreID = 2,
                            Platform = 6,
                            Price = 0.99m,
                            PublisherID = 7,
                            ReleaseDate = new DateTime(2020, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StockQuantity = 150,
                            Title = "Call of Duty: Warzone"
                        },
                        new
                        {
                            GameID = 9,
                            GenreID = 6,
                            Platform = 5,
                            Price = 44.99m,
                            PublisherID = 3,
                            ReleaseDate = new DateTime(2017, 10, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StockQuantity = 65,
                            Title = "Super Mario Odyssey"
                        },
                        new
                        {
                            GameID = 10,
                            GenreID = 4,
                            Platform = 3,
                            Price = 29.99m,
                            PublisherID = 2,
                            ReleaseDate = new DateTime(2013, 9, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StockQuantity = 85,
                            Title = "Grand Theft Auto V"
                        },
                        new
                        {
                            GameID = 11,
                            GenreID = 3,
                            Platform = 1,
                            Price = 24.99m,
                            PublisherID = 8,
                            ReleaseDate = new DateTime(2011, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StockQuantity = 55,
                            Title = "The Elder Scrolls V: Skyrim"
                        },
                        new
                        {
                            GameID = 12,
                            GenreID = 2,
                            Platform = 3,
                            Price = 49.99m,
                            PublisherID = 9,
                            ReleaseDate = new DateTime(2021, 12, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StockQuantity = 40,
                            Title = "Halo Infinite"
                        },
                        new
                        {
                            GameID = 13,
                            GenreID = 3,
                            Platform = 2,
                            Price = 39.99m,
                            PublisherID = 10,
                            ReleaseDate = new DateTime(2020, 8, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StockQuantity = 65,
                            Title = "Horizon Zero Dawn"
                        },
                        new
                        {
                            GameID = 14,
                            GenreID = 7,
                            Platform = 6,
                            Price = 4.99m,
                            PublisherID = 11,
                            ReleaseDate = new DateTime(2018, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StockQuantity = 110,
                            Title = "Among Us"
                        },
                        new
                        {
                            GameID = 15,
                            GenreID = 2,
                            Platform = 1,
                            Price = 19.99m,
                            PublisherID = 12,
                            ReleaseDate = new DateTime(2016, 5, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StockQuantity = 75,
                            Title = "Overwatch"
                        });
                });

            modelBuilder.Entity("VideoGameStore.Models.Genre", b =>
                {
                    b.Property<int>("GenreID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenreID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenreID");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            GenreID = 1,
                            Description = "Open-world games where players have freedom to explore and create.",
                            Name = "Sandbox"
                        },
                        new
                        {
                            GenreID = 2,
                            Description = "Games that emphasize shooting from a first-person perspective.",
                            Name = "First-Person Shooter"
                        },
                        new
                        {
                            GenreID = 3,
                            Description = "Role-playing games with fast-paced action and combat elements.",
                            Name = "Action RPG"
                        },
                        new
                        {
                            GenreID = 4,
                            Description = "Combines action gameplay with adventure elements and storytelling.",
                            Name = "Action-Adventure"
                        },
                        new
                        {
                            GenreID = 5,
                            Description = "Simulations of real-world sports, such as soccer, basketball, and more.",
                            Name = "Sports"
                        },
                        new
                        {
                            GenreID = 6,
                            Description = "Games that focus on navigating platforms and obstacles.",
                            Name = "Platformer"
                        },
                        new
                        {
                            GenreID = 7,
                            Description = "Multiplayer games designed for social gatherings and fun with friends.",
                            Name = "Party"
                        },
                        new
                        {
                            GenreID = 8,
                            Description = "Games that aim to scare and create a suspenseful atmosphere.",
                            Name = "Horror"
                        });
                });

            modelBuilder.Entity("VideoGameStore.Models.Publisher", b =>
                {
                    b.Property<int>("PublisherID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PublisherID"));

                    b.Property<string>("Headquarters")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PublisherID");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            PublisherID = 1,
                            Headquarters = "Warsaw, Poland",
                            Name = "CD Projekt",
                            WebURL = "https://www.cdprojekt.com"
                        },
                        new
                        {
                            PublisherID = 2,
                            Headquarters = "New York City, USA",
                            Name = "Rockstar Games",
                            WebURL = "https://www.rockstargames.com"
                        },
                        new
                        {
                            PublisherID = 3,
                            Headquarters = "Kyoto, Japan",
                            Name = "Nintendo",
                            WebURL = "https://www.nintendo.com"
                        },
                        new
                        {
                            PublisherID = 4,
                            Headquarters = "Montreuil, France",
                            Name = "Ubisoft",
                            WebURL = "https://www.ubisoft.com"
                        },
                        new
                        {
                            PublisherID = 5,
                            Headquarters = "Redwood City, USA",
                            Name = "Electronic Arts",
                            WebURL = "https://www.ea.com"
                        },
                        new
                        {
                            PublisherID = 6,
                            Headquarters = "Stockholm, Sweden",
                            Name = "Mojang Studios",
                            WebURL = "https://www.minecraft.net"
                        },
                        new
                        {
                            PublisherID = 7,
                            Headquarters = "Santa Monica, USA",
                            Name = "Activision",
                            WebURL = "https://www.activision.com"
                        },
                        new
                        {
                            PublisherID = 8,
                            Headquarters = "Rockville, USA",
                            Name = "Bethesda",
                            WebURL = "https://bethesda.net"
                        },
                        new
                        {
                            PublisherID = 9,
                            Headquarters = "Redmond, USA",
                            Name = "Microsoft",
                            WebURL = "https://www.microsoft.com"
                        },
                        new
                        {
                            PublisherID = 10,
                            Headquarters = "San Mateo, USA",
                            Name = "Sony Interactive Entertainment",
                            WebURL = "https://www.sie.com"
                        },
                        new
                        {
                            PublisherID = 11,
                            Headquarters = "Redmond, USA",
                            Name = "Innersloth",
                            WebURL = "https://www.innersloth.com"
                        },
                        new
                        {
                            PublisherID = 12,
                            Headquarters = "Irvine, USA",
                            Name = "Blizzard Entertainment",
                            WebURL = "https://www.blizzard.com"
                        });
                });

            modelBuilder.Entity("VideoGameStore.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("VideoGameStore.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("VideoGameStore.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VideoGameStore.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("VideoGameStore.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VideoGameStore.Admin.Models.Customer", b =>
                {
                    b.HasOne("VideoGameStore.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VideoGameStore.Admin.Models.Employee", b =>
                {
                    b.HasOne("VideoGameStore.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VideoGameStore.Models.Game", b =>
                {
                    b.HasOne("VideoGameStore.Models.Genre", "Genre")
                        .WithMany("Games")
                        .HasForeignKey("GenreID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VideoGameStore.Models.Publisher", "Publisher")
                        .WithMany("Games")
                        .HasForeignKey("PublisherID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("VideoGameStore.Models.Genre", b =>
                {
                    b.Navigation("Games");
                });

            modelBuilder.Entity("VideoGameStore.Models.Publisher", b =>
                {
                    b.Navigation("Games");
                });
#pragma warning restore 612, 618
        }
    }
}
